// 2014-10-09 : mte : adaptation pour 181/182 et suppression de $b en 200// charge l'objet d'accès à winIbw// 2014-12-01 : mte : correction fonction recupererPpn : on utilise la variable p3, pas la zone// 2017-03-16 : sry : modification RDA FR 2017// 2017-06-01 : SRY : correction suite mise en place RDA FR 2017// 2018-01-04 : SRY : suppression zone 579//var application = Components.classes["@oclcpica.nl/kitabapplication;1"]        .getService(Components.interfaces.IApplication);		  function onLoad(){	// à l'ouverture de la boîte de dialogue		return true;}		  function onCancel(){	// The Cancel button is pressed..	//alert("Vous avez cliqué sur Annuler, Rien ne sera modifié.");	return true;}  function picaCopyRecord() {	var bCodedData = application.activeWindow.codedData;		application.activeWindow.codedData = false;	application.activeWindow.noviceMode = false;		application.activeWindow.command("\\too unm", false);	application.activeWindow.copyTitle();	var matCode = application.activeWindow.materialCode;	var forceDocType = matCode.substr(0, 2);		application.activeWindow.command("\\sys 1; \\bes 1", false);			application.activeWindow.materialCode = forceDocType;		// crée une notice vide (cre)	application.activeWindow.command("\\inv 1", false);		if ((application.activeWindow.status == "OK") && (application.activeWindow.title != null)) {		application.activeWindow.pasteTitle();		if (bCodedData) {			application.activeWindow.codedData = true;		}		application.activeWindow.title.endOfBuffer(false);	}}// 20170601 : correction suite mise en place RDA FR 2017function modifier181(){	application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag ("181", 0, true, true, false);		if (res != "")	{		//on laisse la 181 telle quelle	} 	else	{		ajouter("181 ##$P01$ctxt");	}}function modifier200(){	application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag ("200", 0, true, true, false);	if (res != "")	{		application.activeWindow.title.deleteLine(1);		application.activeWindow.title.endOfBuffer (false);		application.activeWindow.title.insertText (res.replace("$bTexte imprimé","") + "\n");	}}function modifier105(){	application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag ("105", 0, true, true, false);	if (res != "")	{		application.activeWindow.title.deleteLine(1);		application.activeWindow.title.endOfBuffer (false);		application.activeWindow.title.insertText (res.replace("$bm","$bv") + "\n");	}}function modifier328(){	application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag ("328", 0, true, true, false);	var indicateurs = res.substring(4,6);	if (res != "")	{		application.activeWindow.title.deleteLine(1);		application.activeWindow.title.endOfBuffer (false);		application.activeWindow.title.insertText (res.replace("328 " + indicateurs,"328 #0$zReproduction de") + "\n");			}}function supprimerRemplacer(ancienneZone, nouvelleZone){		application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag (ancienneZone, 0, true, true, false);	while (res != "")	{		application.activeWindow.title.deleteLine(1);		res = application.activeWindow.title.findTag (ancienneZone, 0, true, true, false);	}	application.activeWindow.title.endOfBuffer (false);	application.activeWindow.title.insertText (nouvelleZone + "\n");}function supprimer(zone){		application.activeWindow.title.startOfBuffer (false);	var res = application.activeWindow.title.findTag (zone, 0, true, true, false);	while (res != "")	{		application.activeWindow.title.deleteLine(1);		res = application.activeWindow.title.findTag (zone, 0, true, true, false);	}}function ajouter(zone){	application.activeWindow.title.endOfBuffer (false);	application.activeWindow.title.insertText (zone + "\n");}// 20170316 : modification RDA FR 2017// 20170601 : correction suite mise en place RDA FR 2017// 20180104 : suppression zone 579function modifierNotice(ancienPpn){		application.activeWindow.title.startOfBuffer (false);		supprimer("000");	supprimer("00A");	supprimer("002");	supprimer("003");	supprimer("010");	supprimer("035");	supprimerRemplacer("100","100 0#$aAnnée d'édition");	modifier105();	supprimer("106");	ajouter("130 ##$ae$bb$cm$fa$gb$hb$ib");	modifier181();	supprimerRemplacer("182","182 ##$P01$ch");	supprimerRemplacer("183","183 ##$P01$ahad");	modifier200();	supprimer("210");	supprimerRemplacer("215", "215 ##$aNombre de microfiches");	//on ajoute la $219 ou bien on la remplace si elle existe déjà	supprimerRemplacer("219","219 #2$aLille$cAtelier national de reproduction des thèses$dAnnée de diffusion");	modifier328();	//ajouter("455 ##$t@Lien vers la thèse imprimé, document originel");	ajouter("455 $0" + ancienPpn);	supprimer("579");	supprimer("801");	supprimer("802");	supprimer("830");		}function recupererPpn(){	application.activeWindow.command("mod", false);	ppn = application.activeWindow.getVariable("P3GPP"); // recupère le ppn	//var zone001 = application.activeWindow.title.findTag ("001", 0, true, true, false);	//var ppn = zone001.substring(4, zone001.length);	application.activeWindow.simulateIBWKey("FE");	return ppn;	}function transfoTheseImpTheseMicr(){	var bCodedData = application.activeWindow.codedData;	application.activeWindow.codedData = false;		var ppn = recupererPpn();	picaCopyRecord();	modifierNotice(ppn);		application.activeWindow.codedData = bCodedData;}